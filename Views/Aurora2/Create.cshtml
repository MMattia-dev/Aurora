@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity;
@using System.Web;
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
@using Newtonsoft.Json
@model Aurora.Models.AuroraModel2

@{
    ViewData["Title"] = "Create";

    var claimsIdentity = User.Identity as ClaimsIdentity;
    var userID = "";
    if (claimsIdentity != null)
    {
        var userIdClaim = claimsIdentity.Claims.FirstOrDefault(x => x.Type == ClaimTypes.NameIdentifier);
        if (userIdClaim != null)
        {
            userID = userIdClaim.Value;
        }
    }
}


<div class="row rowCreate">
    <div class="col-md-12 form">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" style="display: none;">
                <label asp-for="UserID" class="control-label"></label>
                <input asp-for="UserID" class="form-control" readonly id="user" />
                <span asp-validation-for="UserID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control form-control2" placeholder="..." />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                @*<input asp-for="Description" class="form-control" />*@
                <textarea asp-for="Description" class="form-control form-control2" id="description" placeholder="..."></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group" style="display: none;">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" id="dateID" class="form-control" readonly />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Place" class="control-label"></label>
                <input asp-for="Place" class="form-control form-control2" id="placeID" placeholder="..." />
                <span asp-validation-for="Place" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="JobLength" class="control-label"></label>
                @*<input asp-for="JobLength" class="form-control" />*@
                <select id="jobLengthID" asp-for="JobLength" class="form-control form-select form-control2"></select>
                <span asp-validation-for="JobLength" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Difficulty" class="control-label"></label>
                @*<input asp-for="Difficulty" class="form-control" />*@
                <select id="DifficultyID" asp-for="Difficulty" class="form-control form-select form-control2"></select>
                <span asp-validation-for="Difficulty" class="text-danger"></span>
            </div>
            <div class="form-group">
                @*<label asp-for="JobWorkers" class="control-label"></label>
                <input asp-for="JobWorkers" class="form-control" />
                <span asp-validation-for="JobWorkers" class="text-danger"></span>*@
                <label asp-for="JobWorkers" class="control-label"></label>
                <div style="display: flex; flex-direction: row; flex-wrap: wrap; gap: 2px;">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <input onchange="radioChange(this)" value="@i" id="JobWorkersInputID + @i" class="JobWorkersInput" name="radio" type="radio" />

                        <label class="JobWorkersLabel" for="JobWorkersInputID + @i">@i</label>
                    }
                    <input onchange="radioChange(this)" value="więcej" id="JobWorkersInputID5" class="JobWorkersInput" name="radio" type="radio" /><label class="JobWorkersLabel JobWorkersLabel5" for="JobWorkersInputID5">więcej...</label>
                    <input asp-for="JobWorkers" placeholder="ile?... (wpisz od 6 do 9)" class="form-control form-control2" max="9" id="JobWorkersID" style="display: none;" />
                </div>
                <span asp-validation-for="JobWorkers" class="text-danger" id="JobWorkersError"></span>
            </div>
            <div class="form-group">
                @*<label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>*@
                <label asp-for="Phone" class="control-label"></label>
                <div class="phone">
                    @*<span asp-validation-for="Phone" style="">+48</span>*@
                    <input class="form-control form-control2 phone48" value="+48" disabled />
                    <input asp-for="Phone" class="form-control form-control2" value="" id="phoneID" type="number" placeholder="numer telefonu zlecającego" />
                </div>
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TimeLength" class="control-label"></label>
                @*<input asp-for="TimeLength" class="form-control" />*@
                <select id="TimeLengthID" asp-for="TimeLength" class="form-control form-select form-control2"></select>
                <span asp-validation-for="TimeLength" class="text-danger"></span>
            </div>
            <div class="form-group" style="display: none;">
                <label asp-for="JobEnd" class="control-label"></label>
                <input asp-for="JobEnd" class="form-control" id="jobEndID" />
                <span asp-validation-for="JobEnd" class="text-danger"></span>
            </div>
            <div class="form-group form-check" style="display: none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="JobHidden" /> @Html.DisplayNameFor(model => model.JobHidden)
                </label>
            </div>
            <div class="form-group form-check" style="display: none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="JobDone" /> @Html.DisplayNameFor(model => model.JobDone)
                </label>
            </div>
            <div class="form-group" id="submit-form" style="">
                <input type="submit" value="Zapisz" class="btn btn-primary" id="submit" />
            </div>
        </form>
    </div>
</div>

@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script type="text/javascript">

    var jl = @Html.Raw(JsonConvert.SerializeObject(ViewBag.jobLengths));
    var tl = @Html.Raw(JsonConvert.SerializeObject(ViewBag.timeLengths));
    var dif = @Html.Raw(JsonConvert.SerializeObject(ViewBag.difficulty));


    let jobLengthSelect = document.getElementById("jobLengthID");
    jobLengthSelect.innerHTML = '<option>...</option>';
    for (let i = 0; i < jl.length; i++) {
        jobLengthSelect.innerHTML += '<option value=' + jl[i].Id + '>' + jl[i].Length + '</option>';
    }

    let TimeLengthSelect = document.getElementById("TimeLengthID");
    TimeLengthSelect.innerHTML = '<option>...</option>';
    for (let i = 0; i < tl.length; i++) {
        TimeLengthSelect.innerHTML += '<option value=' + tl[i].Id + '>' + tl[i].Length + '</option>';
    }

    let DifficultySelect = document.getElementById("DifficultyID");
    DifficultySelect.innerHTML = '<option>...</option>';
    for (let i = 0; i < dif.length; i++) {
        DifficultySelect.innerHTML += '<option value=' + dif[i].Id + '>' + dif[i].DifficultyName + '</option>';
    }



    Date.prototype.today = function () {
        return this.getFullYear() + "." + (((this.getMonth() + 1) < 10) ? "0" : "") + (this.getMonth() + 1) + "." + ((this.getDate() < 10) ? "0" : "") + this.getDate();
    }

    Date.prototype.timeNow = function () {
        return ((this.getHours() < 10) ? "0" : "") + (this.getHours()) + ":" + ((this.getMinutes() < 10) ? "0" : "") + this.getMinutes() + ":" + ((this.getSeconds() < 10) ? "0" : "") + this.getSeconds();
        //return ((this.getHours() < 10) ? "0" : "") + (this.getHours() + 2) + ":" + ((this.getMinutes() < 10) ? "0" : "") + this.getMinutes() + ":" + ((this.getSeconds() < 10) ? "0" : "") + this.getSeconds();
        //(this.getHours() + 2) -> GMT+2 dla Polski
    }

    Date.prototype.addDays = function (days) {
        var date = new Date(this.valueOf());
        date.setDate(date.getDate() + days);
        return date;
    }



    $('#submit').click(function(){
        
        document.getElementById("user").value = '@userID';
        
        var str = document.getElementById("description").value;
        if (str.length > 0) {
            var lines = str.split("\n");
            for (var i = 0; i < lines.length; i++) {
                lines[i] = lines[i] + "<br>";
            }
            document.getElementById("description").value = lines.join("\n");
        }

        //document.getElementById("AcceptStatus").checked = true;
        //document.getElementById("name").value = "NULL";

        let datetime = new Date().today() + " " + new Date().timeNow();
        let newDate = new Date(datetime);
        $("#dateID").val(new Date(newDate).toISOString().split('.')[0]);

    });

    //7 14 21 28
    $("#TimeLengthID").change(function () {
        let datetime = new Date().today() + " " + new Date().timeNow();
        let newDate = new Date(datetime);

        let appendDays = 0;
        //console.log(this.options[this.selectedIndex].text);
        if (this.selectedIndex == 1)
            appendDays = 3;
        if (this.selectedIndex == 2)
            appendDays = 5;
        if (this.selectedIndex == 3)
            appendDays = 7;
        

        if (appendDays != 0) {
            //yyyy-MM-ddThh:mm
            let afterDate = newDate.addDays(appendDays);
            afterDate = new Date(afterDate);
            $("#jobEndID").val(afterDate.toISOString().split('.')[0]);
        }
    });
    


    $("input").not("[type=radio]").attr("onfocusout", "checkEmpty(this)");
    //("input[type=radio]").attr("onchange", "radioChange(this)");
    $("textarea").attr("onfocusout", "checkEmpty(this)");
    $("select").attr("onfocusout", "checkEmptySelect(this)");
    $("#phoneID").attr("onfocusout", "checkPhone(this)");

    function checkEmpty(t){
        if(t.value.length > 0){
            //t.style.outline = "1px solid limegreen";
            t.style.borderBottom = "1px solid forestgreen";
        }
        else {
            //t.style.outline = "unset";
            t.style.borderBottom = "1px solid rgba(0, 0, 0, 0.5)";
        }
    };

    function checkEmptySelect(t){
        if(t.selectedIndex > 0){
            //t.style.outline = "1px solid limegreen";
            t.style.borderBottom = "1px solid forestgreen";
        }
        else {
            //t.style.outline = "unset";
            t.style.borderBottom = "1px solid rgba(0, 0, 0, 0.5)";
        }
    };

    function checkPhone(t){
        let regex = /^(\d{9})$/i;
        if(regex.test(t.value)){
            //t.style.outline = "1px solid limegreen";
            t.style.borderBottom = "1px solid forestgreen";
        }
        else {
            //t.style.outline = "unset";
            t.style.borderBottom = "1px solid rgba(0, 0, 0, 0.5)";
        }
    };

    function radioChange(t) {
        if(t.value == "więcej"){
            document.getElementById("JobWorkersID").value = "";
            document.getElementById("JobWorkersID").style.display = "";
            document.getElementById("JobWorkersError").style.display = "unset";
        }
        else {
            document.getElementById("JobWorkersID").value = t.value;
            document.getElementById("JobWorkersID").style.display = "none";
            document.getElementById("JobWorkersError").style.display = "none";
        }
    };

    //$("#JobWorkersID").click(function () {
    //    document.getElementById("JobWorkersID").style.display = "";
    //});

    function checkRadio(number) {
        let elements = document.querySelectorAll("JobWorkersInput");
        document.getElementById("JobWorkersInputID + " + number).checked = true;
    };

    $("#JobWorkersID").change(function () {
        if(this.value == 1){
            checkRadio(1);
            document.getElementById("JobWorkersID").style.display = "none";
        }
        if(this.value == 2){
            checkRadio(2);
            document.getElementById("JobWorkersID").style.display = "none";
        }
        if(this.value == 3){
            checkRadio(3);
            document.getElementById("JobWorkersID").style.display = "none";
        }
        if(this.value == 4){
            checkRadio(4);
            document.getElementById("JobWorkersID").style.display = "none";
        }
        if(this.value == 5){
            checkRadio(5);
            document.getElementById("JobWorkersID").style.display = "none";
        }
    });

    $("input").bind("keypress", function (e) {
        if(e.keyCode == 13){
            return false;
        }
    });



    var townsArray = [];
    $.getJSON('../js/towns.json', function(data) {
        //Id //Name //Type //Province //District //Commune //Latitude //Longitude
        for(let i = 0; i < data.length; i++){
            let miejscowosc = data[i].Name;
            let powiat = data[i].District;
            let wojewodztwo = data[i].Province;

            townsArray.push(miejscowosc + ' (Powiat: ' + powiat + ', Województwo: ' + wojewodztwo + ')');
        }
    });

    $("#placeID").autocomplete({
        source: townsArray,
        minLength: 4
    });




</script>